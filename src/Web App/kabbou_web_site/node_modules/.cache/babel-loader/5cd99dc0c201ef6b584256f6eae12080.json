{"ast":null,"code":"import _objectWithoutProperties from \"/Users/simohamedkabbou/Dev/React/kabbou_web_site/src/Back/Web App/kabbou_web_site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/simohamedkabbou/Dev/React/kabbou_web_site/src/Back/Web App/kabbou_web_site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/simohamedkabbou/Dev/React/kabbou_web_site/src/Back/Web App/kabbou_web_site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/simohamedkabbou/Dev/React/kabbou_web_site/src/Back/Web App/kabbou_web_site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/simohamedkabbou/Dev/React/kabbou_web_site/src/Back/Web App/kabbou_web_site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/simohamedkabbou/Dev/React/kabbou_web_site/src/Back/Web App/kabbou_web_site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport $6nfFC$swchelperssrc_define_propertymjs from \"@swc/helpers/src/_define_property.mjs\";\nimport $6nfFC$react, { useRef as $6nfFC$useRef, useContext as $6nfFC$useContext, useMemo as $6nfFC$useMemo, useEffect as $6nfFC$useEffect, useState as $6nfFC$useState, useCallback as $6nfFC$useCallback } from \"react\";\nimport { useLayoutEffect as $6nfFC$useLayoutEffect, runAfterTransition as $6nfFC$runAfterTransition, focusWithoutScrolling as $6nfFC$focusWithoutScrolling, mergeProps as $6nfFC$mergeProps, useSyncRef as $6nfFC$useSyncRef } from \"@react-aria/utils\";\nimport { getInteractionModality as $6nfFC$getInteractionModality, isFocusVisible as $6nfFC$isFocusVisible, useFocusVisibleListener as $6nfFC$useFocusVisibleListener, useFocus as $6nfFC$useFocus, useFocusWithin as $6nfFC$useFocusWithin, useKeyboard as $6nfFC$useKeyboard } from \"@react-aria/interactions\";\nimport $6nfFC$clsx from \"clsx\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2020 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $6a99195332edec8b$export$80f3e147d781571c(element) {\n  // If the user is interacting with a virtual cursor, e.g. screen reader, then\n  // wait until after any animated transitions that are currently occurring on\n  // the page before shifting focus. This avoids issues with VoiceOver on iOS\n  // causing the page to scroll when moving focus if the element is transitioning\n  // from off the screen.\n  if ((0, $6nfFC$getInteractionModality)() === \"virtual\") {\n    var lastFocusedElement = document.activeElement;\n    (0, $6nfFC$runAfterTransition)(function () {\n      // If focus did not move and the element is still in the document, focus it.\n      if (document.activeElement === lastFocusedElement && document.contains(element)) (0, $6nfFC$focusWithoutScrolling)(element);\n    });\n  } else (0, $6nfFC$focusWithoutScrolling)(element);\n}\n\n/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nfunction $645f2e67b85a24c9$var$isStyleVisible(element) {\n  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) return false;\n  var _element$style = element.style,\n    display = _element$style.display,\n    visibility = _element$style.visibility;\n  var isVisible = display !== \"none\" && visibility !== \"hidden\" && visibility !== \"collapse\";\n  if (isVisible) {\n    var getComputedStyle = element.ownerDocument.defaultView.getComputedStyle;\n    var _getComputedStyle = getComputedStyle(element),\n      computedDisplay = _getComputedStyle.display,\n      computedVisibility = _getComputedStyle.visibility;\n    isVisible = computedDisplay !== \"none\" && computedVisibility !== \"hidden\" && computedVisibility !== \"collapse\";\n  }\n  return isVisible;\n}\nfunction $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) {\n  return !element.hasAttribute(\"hidden\") && (element.nodeName === \"DETAILS\" && childElement && childElement.nodeName !== \"SUMMARY\" ? element.hasAttribute(\"open\") : true);\n}\nfunction $645f2e67b85a24c9$export$e989c0fffaa6b27a(element, childElement) {\n  return element.nodeName !== \"#comment\" && $645f2e67b85a24c9$var$isStyleVisible(element) && $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) && (!element.parentElement || $645f2e67b85a24c9$export$e989c0fffaa6b27a(element.parentElement, element));\n}\nvar $9bf71ea28793e738$var$FocusContext = /*#__PURE__*/(0, $6nfFC$react).createContext(null);\nvar $9bf71ea28793e738$var$activeScope = null;\nfunction $9bf71ea28793e738$export$20e40289641fbbb6(props) {\n  var children = props.children,\n    contain = props.contain,\n    restoreFocus = props.restoreFocus,\n    autoFocus = props.autoFocus;\n  var startRef = (0, $6nfFC$useRef)();\n  var endRef = (0, $6nfFC$useRef)();\n  var scopeRef = (0, $6nfFC$useRef)([]);\n  var _ref = (0, $6nfFC$useContext)($9bf71ea28793e738$var$FocusContext) || {},\n    parentNode = _ref.parentNode; // Create a tree node here so we can add children to it even before it is added to the tree.\n  var node = (0, $6nfFC$useMemo)(function () {\n    return new $9bf71ea28793e738$var$TreeNode({\n      scopeRef: scopeRef\n    });\n  }, [scopeRef]);\n  (0, $6nfFC$useLayoutEffect)(function () {\n    // If a new scope mounts outside the active scope, (e.g. DialogContainer launched from a menu),\n    // use the active scope as the parent instead of the parent from context. Layout effects run bottom\n    // up, so if the parent is not yet added to the tree, don't do this. Only the outer-most FocusScope\n    // that is being added should get the activeScope as its parent.\n    var parent = parentNode || $9bf71ea28793e738$export$d06fae2ee68b101e.root;\n    if ($9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(parent.scopeRef) && $9bf71ea28793e738$var$activeScope && !$9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, parent.scopeRef)) {\n      var activeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope);\n      if (activeNode) parent = activeNode;\n    }\n    // Add the node to the parent, and to the tree.\n    parent.addChild(node);\n    $9bf71ea28793e738$export$d06fae2ee68b101e.addNode(node);\n  }, [node, parentNode]);\n  (0, $6nfFC$useLayoutEffect)(function () {\n    var node = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef);\n    node.contain = contain;\n  }, [contain]);\n  (0, $6nfFC$useLayoutEffect)(function () {\n    // Find all rendered nodes between the sentinels and add them to the scope.\n    var node = startRef.current.nextSibling;\n    var nodes = [];\n    while (node && node !== endRef.current) {\n      nodes.push(node);\n      node = node.nextSibling;\n    }\n    scopeRef.current = nodes;\n  }, [children]);\n  $9bf71ea28793e738$var$useActiveScopeTracker(scopeRef, restoreFocus, contain);\n  $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain);\n  $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain);\n  $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus);\n  // this layout effect needs to run last so that focusScopeTree cleanup happens at the last moment possible\n  (0, $6nfFC$useEffect)(function () {\n    if (scopeRef) {\n      var activeElement = document.activeElement;\n      var scope = null;\n      // In strict mode, active scope is incorrectly updated since cleanup will run even though scope hasn't unmounted.\n      // To fix this, we need to update the actual activeScope here\n      if ($9bf71ea28793e738$var$isElementInScope(activeElement, scopeRef.current)) {\n        // Since useLayoutEffect runs for children first, we need to traverse the focusScope tree and find the bottom most scope that\n        // contains the active element and set that as the activeScope\n        var _iterator = _createForOfIteratorHelper($9bf71ea28793e738$export$d06fae2ee68b101e.traverse()),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _node = _step.value;\n            if ($9bf71ea28793e738$var$isElementInScope(activeElement, _node.scopeRef.current)) scope = _node;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        if (scope === $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef)) $9bf71ea28793e738$var$activeScope = scope.scopeRef;\n      }\n      return function () {\n        // Scope may have been re-parented.\n        var parentScope = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef).parent.scopeRef;\n        // Restore the active scope on unmount if this scope or a descendant scope is active.\n        // Parent effect cleanups run before children, so we need to check if the\n        // parent scope actually still exists before restoring the active scope to it.\n        if ((scopeRef === $9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope(scopeRef, $9bf71ea28793e738$var$activeScope)) && (!parentScope || $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(parentScope))) $9bf71ea28793e738$var$activeScope = parentScope;\n        $9bf71ea28793e738$export$d06fae2ee68b101e.removeTreeNode(scopeRef);\n      };\n    }\n  }, [scopeRef]);\n  var focusManager = (0, $6nfFC$useMemo)(function () {\n    return $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef);\n  }, []);\n  var value = (0, $6nfFC$useMemo)(function () {\n    return {\n      focusManager: focusManager,\n      parentNode: node\n    };\n  }, [node, focusManager]);\n  return /*#__PURE__*/(0, $6nfFC$react).createElement($9bf71ea28793e738$var$FocusContext.Provider, {\n    value: value\n  }, /*#__PURE__*/(0, $6nfFC$react).createElement(\"span\", {\n    \"data-focus-scope-start\": true,\n    hidden: true,\n    ref: startRef\n  }), children, /*#__PURE__*/(0, $6nfFC$react).createElement(\"span\", {\n    \"data-focus-scope-end\": true,\n    hidden: true,\n    ref: endRef\n  }));\n}\nfunction $9bf71ea28793e738$export$10c5169755ce7bd7() {\n  var _useContext;\n  return (_useContext = (0, $6nfFC$useContext)($9bf71ea28793e738$var$FocusContext)) === null || _useContext === void 0 ? void 0 : _useContext.focusManager;\n}\nfunction $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef) {\n  return {\n    focusNext: function focusNext() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var from = opts.from,\n        tabbable = opts.tabbable,\n        wrap = opts.wrap,\n        accept = opts.accept;\n      var node = from || document.activeElement;\n      var sentinel = scope[0].previousElementSibling;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = $9bf71ea28793e738$var$isElementInScope(node, scope) ? node : sentinel;\n      var nextNode = walker.nextNode();\n      if (!nextNode && wrap) {\n        walker.currentNode = sentinel;\n        nextNode = walker.nextNode();\n      }\n      if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusPrevious: function focusPrevious() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var from = opts.from,\n        tabbable = opts.tabbable,\n        wrap = opts.wrap,\n        accept = opts.accept;\n      var node = from || document.activeElement;\n      var sentinel = scope[scope.length - 1].nextElementSibling;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = $9bf71ea28793e738$var$isElementInScope(node, scope) ? node : sentinel;\n      var previousNode = walker.previousNode();\n      if (!previousNode && wrap) {\n        walker.currentNode = sentinel;\n        previousNode = walker.previousNode();\n      }\n      if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);\n      return previousNode;\n    },\n    focusFirst: function focusFirst() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var tabbable = opts.tabbable,\n        accept = opts.accept;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = scope[0].previousElementSibling;\n      var nextNode = walker.nextNode();\n      if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusLast: function focusLast() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var tabbable = opts.tabbable,\n        accept = opts.accept;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = scope[scope.length - 1].nextElementSibling;\n      var previousNode = walker.previousNode();\n      if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);\n      return previousNode;\n    }\n  };\n}\nvar $9bf71ea28793e738$var$focusableElements = [\"input:not([disabled]):not([type=hidden])\", \"select:not([disabled])\", \"textarea:not([disabled])\", \"button:not([disabled])\", \"a[href]\", \"area[href]\", \"summary\", \"iframe\", \"object\", \"embed\", \"audio[controls]\", \"video[controls]\", \"[contenteditable]\"];\nvar $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(\":not([hidden]),\") + \",[tabindex]:not([disabled]):not([hidden])\";\n$9bf71ea28793e738$var$focusableElements.push('[tabindex]:not([tabindex=\"-1\"]):not([disabled])');\nvar $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(':not([hidden]):not([tabindex=\"-1\"]),');\nfunction $9bf71ea28793e738$var$getScopeRoot(scope) {\n  return scope[0].parentElement;\n}\nfunction $9bf71ea28793e738$var$shouldContainFocus(scopeRef) {\n  var scope = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.contain) return false;\n    scope = scope.parent;\n  }\n  return true;\n}\nfunction $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain) {\n  var focusedNode = (0, $6nfFC$useRef)();\n  var raf = (0, $6nfFC$useRef)(null);\n  (0, $6nfFC$useLayoutEffect)(function () {\n    var scope = scopeRef.current;\n    if (!contain) {\n      // if contain was changed, then we should cancel any ongoing waits to pull focus back into containment\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n        raf.current = null;\n      }\n      return;\n    }\n    // Handle the Tab key to contain focus within the scope\n    var onKeyDown = function onKeyDown(e) {\n      if (e.key !== \"Tab\" || e.altKey || e.ctrlKey || e.metaKey || !$9bf71ea28793e738$var$shouldContainFocus(scopeRef)) return;\n      var focusedElement = document.activeElement;\n      var scope = scopeRef.current;\n      if (!$9bf71ea28793e738$var$isElementInScope(focusedElement, scope)) return;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {\n        tabbable: true\n      }, scope);\n      walker.currentNode = focusedElement;\n      var nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      if (!nextElement) {\n        walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;\n        nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      }\n      e.preventDefault();\n      if (nextElement) $9bf71ea28793e738$var$focusElement(nextElement, true);\n    };\n    var onFocus = function onFocus(e) {\n      // If focusing an element in a child scope of the currently active scope, the child becomes active.\n      // Moving out of the active scope to an ancestor is not allowed.\n      if ((!$9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, scopeRef)) && $9bf71ea28793e738$var$isElementInScope(e.target, scopeRef.current)) {\n        $9bf71ea28793e738$var$activeScope = scopeRef;\n        focusedNode.current = e.target;\n      } else if ($9bf71ea28793e738$var$shouldContainFocus(scopeRef) && !$9bf71ea28793e738$var$isElementInChildScope(e.target, scopeRef)) {\n        // If a focus event occurs outside the active scope (e.g. user tabs from browser location bar),\n        // restore focus to the previously focused node or the first tabbable element in the active scope.\n        if (focusedNode.current) focusedNode.current.focus();else if ($9bf71ea28793e738$var$activeScope) $9bf71ea28793e738$var$focusFirstInScope($9bf71ea28793e738$var$activeScope.current);\n      } else if ($9bf71ea28793e738$var$shouldContainFocus(scopeRef)) focusedNode.current = e.target;\n    };\n    var onBlur = function onBlur(e) {\n      // Firefox doesn't shift focus back to the Dialog properly without this\n      if (raf.current) cancelAnimationFrame(raf.current);\n      raf.current = requestAnimationFrame(function () {\n        // Use document.activeElement instead of e.relatedTarget so we can tell if user clicked into iframe\n        if ($9bf71ea28793e738$var$shouldContainFocus(scopeRef) && !$9bf71ea28793e738$var$isElementInChildScope(document.activeElement, scopeRef)) {\n          $9bf71ea28793e738$var$activeScope = scopeRef;\n          if (document.body.contains(e.target)) {\n            focusedNode.current = e.target;\n            focusedNode.current.focus();\n          } else if ($9bf71ea28793e738$var$activeScope) $9bf71ea28793e738$var$focusFirstInScope($9bf71ea28793e738$var$activeScope.current);\n        }\n      });\n    };\n    document.addEventListener(\"keydown\", onKeyDown, false);\n    document.addEventListener(\"focusin\", onFocus, false);\n    scope.forEach(function (element) {\n      return element.addEventListener(\"focusin\", onFocus, false);\n    });\n    scope.forEach(function (element) {\n      return element.addEventListener(\"focusout\", onBlur, false);\n    });\n    return function () {\n      document.removeEventListener(\"keydown\", onKeyDown, false);\n      document.removeEventListener(\"focusin\", onFocus, false);\n      scope.forEach(function (element) {\n        return element.removeEventListener(\"focusin\", onFocus, false);\n      });\n      scope.forEach(function (element) {\n        return element.removeEventListener(\"focusout\", onBlur, false);\n      });\n    };\n  }, [scopeRef, contain]);\n  // eslint-disable-next-line arrow-body-style\n  (0, $6nfFC$useEffect)(function () {\n    return function () {\n      if (raf.current) cancelAnimationFrame(raf.current);\n    };\n  }, [raf]);\n}\nfunction $9bf71ea28793e738$var$isElementInAnyScope(element) {\n  return $9bf71ea28793e738$var$isElementInChildScope(element);\n}\nfunction $9bf71ea28793e738$var$isElementInScope(element, scope) {\n  return scope.some(function (node) {\n    return node.contains(element);\n  });\n}\nfunction $9bf71ea28793e738$var$isElementInChildScope(element) {\n  var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  // If the element is within a top layer element (e.g. toasts), always allow moving focus there.\n  if (element instanceof Element && element.closest(\"[data-react-aria-top-layer]\")) return true;\n  // node.contains in isElementInScope covers child scopes that are also DOM children,\n  // but does not cover child scopes in portals.\n  var _iterator2 = _createForOfIteratorHelper($9bf71ea28793e738$export$d06fae2ee68b101e.traverse($9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scope))),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var s = _step2.value.scopeRef;\n      if ($9bf71ea28793e738$var$isElementInScope(element, s.current)) return true;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return false;\n}\nfunction $9bf71ea28793e738$export$1258395f99bf9cbf(element) {\n  return $9bf71ea28793e738$var$isElementInChildScope(element, $9bf71ea28793e738$var$activeScope);\n}\nfunction $9bf71ea28793e738$var$isAncestorScope(ancestor, scope) {\n  var _focusScopeTree_getTreeNode;\n  var parent = (_focusScopeTree_getTreeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scope)) === null || _focusScopeTree_getTreeNode === void 0 ? void 0 : _focusScopeTree_getTreeNode.parent;\n  while (parent) {\n    if (parent.scopeRef === ancestor) return true;\n    parent = parent.parent;\n  }\n  return false;\n}\nfunction $9bf71ea28793e738$var$focusElement(element) {\n  var scroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (element != null && !scroll) try {\n    (0, $6a99195332edec8b$export$80f3e147d781571c)(element);\n  } catch (err) {\n    // ignore\n  } else if (element != null) try {\n    element.focus();\n  } catch (err1) {\n    // ignore\n  }\n}\nfunction $9bf71ea28793e738$var$focusFirstInScope(scope) {\n  var tabbable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var sentinel = scope[0].previousElementSibling;\n  var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {\n    tabbable: tabbable\n  }, scope);\n  walker.currentNode = sentinel;\n  var nextNode = walker.nextNode();\n  // If the scope does not contain a tabbable element, use the first focusable element.\n  if (tabbable && !nextNode) {\n    walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {\n      tabbable: false\n    }, scope);\n    walker.currentNode = sentinel;\n    nextNode = walker.nextNode();\n  }\n  $9bf71ea28793e738$var$focusElement(nextNode);\n}\nfunction $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus) {\n  var autoFocusRef = (0, $6nfFC$react).useRef(autoFocus);\n  (0, $6nfFC$useEffect)(function () {\n    if (autoFocusRef.current) {\n      $9bf71ea28793e738$var$activeScope = scopeRef;\n      if (!$9bf71ea28793e738$var$isElementInScope(document.activeElement, $9bf71ea28793e738$var$activeScope.current)) $9bf71ea28793e738$var$focusFirstInScope(scopeRef.current);\n    }\n    autoFocusRef.current = false;\n  }, [scopeRef]);\n}\nfunction $9bf71ea28793e738$var$useActiveScopeTracker(scopeRef, restore, contain) {\n  // tracks the active scope, in case restore and contain are both false.\n  // if either are true, this is tracked in useRestoreFocus or useFocusContainment.\n  (0, $6nfFC$useLayoutEffect)(function () {\n    if (restore || contain) return;\n    var scope = scopeRef.current;\n    var onFocus = function onFocus(e) {\n      var target = e.target;\n      if ($9bf71ea28793e738$var$isElementInScope(target, scopeRef.current)) $9bf71ea28793e738$var$activeScope = scopeRef;else if (!$9bf71ea28793e738$var$isElementInAnyScope(target)) $9bf71ea28793e738$var$activeScope = null;\n    };\n    document.addEventListener(\"focusin\", onFocus, false);\n    scope.forEach(function (element) {\n      return element.addEventListener(\"focusin\", onFocus, false);\n    });\n    return function () {\n      document.removeEventListener(\"focusin\", onFocus, false);\n      scope.forEach(function (element) {\n        return element.removeEventListener(\"focusin\", onFocus, false);\n      });\n    };\n  }, [scopeRef, restore, contain]);\n}\nfunction $9bf71ea28793e738$var$shouldRestoreFocus(scopeRef) {\n  var scope = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.nodeToRestore) return false;\n    scope = scope.parent;\n  }\n  return (scope === null || scope === void 0 ? void 0 : scope.scopeRef) === scopeRef;\n}\nfunction $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain) {\n  // create a ref during render instead of useLayoutEffect so the active element is saved before a child with autoFocus=true mounts.\n  var nodeToRestoreRef = (0, $6nfFC$useRef)(typeof document !== \"undefined\" ? document.activeElement : null);\n  // restoring scopes should all track if they are active regardless of contain, but contain already tracks it plus logic to contain the focus\n  // restoring-non-containing scopes should only care if they become active so they can perform the restore\n  (0, $6nfFC$useLayoutEffect)(function () {\n    var scope = scopeRef.current;\n    if (!restoreFocus || contain) return;\n    var onFocus = function onFocus() {\n      // If focusing an element in a child scope of the currently active scope, the child becomes active.\n      // Moving out of the active scope to an ancestor is not allowed.\n      if ((!$9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, scopeRef)) && $9bf71ea28793e738$var$isElementInScope(document.activeElement, scopeRef.current)) $9bf71ea28793e738$var$activeScope = scopeRef;\n    };\n    document.addEventListener(\"focusin\", onFocus, false);\n    scope.forEach(function (element) {\n      return element.addEventListener(\"focusin\", onFocus, false);\n    });\n    return function () {\n      document.removeEventListener(\"focusin\", onFocus, false);\n      scope.forEach(function (element) {\n        return element.removeEventListener(\"focusin\", onFocus, false);\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [scopeRef, contain]);\n  // useLayoutEffect instead of useEffect so the active element is saved synchronously instead of asynchronously.\n  (0, $6nfFC$useLayoutEffect)(function () {\n    if (!restoreFocus) return;\n    $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef).nodeToRestore = nodeToRestoreRef.current;\n    // Handle the Tab key so that tabbing out of the scope goes to the next element\n    // after the node that had focus when the scope mounted. This is important when\n    // using portals for overlays, so that focus goes to the expected element when\n    // tabbing out of the overlay.\n    var onKeyDown = function onKeyDown(e) {\n      if (e.key !== \"Tab\" || e.altKey || e.ctrlKey || e.metaKey) return;\n      var focusedElement = document.activeElement;\n      if (!$9bf71ea28793e738$var$isElementInScope(focusedElement, scopeRef.current)) return;\n      var nodeToRestore = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef).nodeToRestore;\n      // Create a DOM tree walker that matches all tabbable elements\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(document.body, {\n        tabbable: true\n      });\n      // Find the next tabbable element after the currently focused element\n      walker.currentNode = focusedElement;\n      var nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      if (!document.body.contains(nodeToRestore) || nodeToRestore === document.body) {\n        nodeToRestore = null;\n        $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef).nodeToRestore = null;\n      }\n      // If there is no next element, or it is outside the current scope, move focus to the\n      // next element after the node to restore to instead.\n      if ((!nextElement || !$9bf71ea28793e738$var$isElementInScope(nextElement, scopeRef.current)) && nodeToRestore) {\n        walker.currentNode = nodeToRestore;\n        // Skip over elements within the scope, in case the scope immediately follows the node to restore.\n        do nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode(); while ($9bf71ea28793e738$var$isElementInScope(nextElement, scopeRef.current));\n        e.preventDefault();\n        e.stopPropagation();\n        if (nextElement) $9bf71ea28793e738$var$focusElement(nextElement, true);else\n          // If there is no next element and the nodeToRestore isn't within a FocusScope (i.e. we are leaving the top level focus scope)\n          // then move focus to the body.\n          // Otherwise restore focus to the nodeToRestore (e.g menu within a popover -> tabbing to close the menu should move focus to menu trigger)\n          if (!$9bf71ea28793e738$var$isElementInAnyScope(nodeToRestore)) focusedElement.blur();else $9bf71ea28793e738$var$focusElement(nodeToRestore, true);\n      }\n    };\n    if (!contain) document.addEventListener(\"keydown\", onKeyDown, true);\n    return function () {\n      if (!contain) document.removeEventListener(\"keydown\", onKeyDown, true);\n      var nodeToRestore = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef).nodeToRestore;\n      // if we already lost focus to the body and this was the active scope, then we should attempt to restore\n      if (restoreFocus && nodeToRestore && (\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      $9bf71ea28793e738$var$isElementInScope(document.activeElement, scopeRef.current) || document.activeElement === document.body && $9bf71ea28793e738$var$shouldRestoreFocus(scopeRef))) {\n        // freeze the focusScopeTree so it persists after the raf, otherwise during unmount nodes are removed from it\n        var clonedTree = $9bf71ea28793e738$export$d06fae2ee68b101e.clone();\n        requestAnimationFrame(function () {\n          // Only restore focus if we've lost focus to the body, the alternative is that focus has been purposefully moved elsewhere\n          if (document.activeElement === document.body) {\n            // look up the tree starting with our scope to find a nodeToRestore still in the DOM\n            var treeNode = clonedTree.getTreeNode(scopeRef);\n            while (treeNode) {\n              if (treeNode.nodeToRestore && document.body.contains(treeNode.nodeToRestore)) {\n                $9bf71ea28793e738$var$focusElement(treeNode.nodeToRestore);\n                return;\n              }\n              treeNode = treeNode.parent;\n            }\n            // If no nodeToRestore was found, focus the first element in the nearest\n            // ancestor scope that is still in the tree.\n            treeNode = clonedTree.getTreeNode(scopeRef);\n            while (treeNode) {\n              if (treeNode.scopeRef && $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(treeNode.scopeRef)) {\n                $9bf71ea28793e738$var$focusFirstInScope(treeNode.scopeRef.current, true);\n                return;\n              }\n              treeNode = treeNode.parent;\n            }\n          }\n        });\n      }\n    };\n  }, [scopeRef, restoreFocus, contain]);\n}\nfunction $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, opts, scope) {\n  var selector = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR : $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR;\n  var walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: function acceptNode(node) {\n      var _opts_from;\n      // Skip nodes inside the starting node.\n      if (opts === null || opts === void 0 ? void 0 : (_opts_from = opts.from) === null || _opts_from === void 0 ? void 0 : _opts_from.contains(node)) return NodeFilter.FILTER_REJECT;\n      if (node.matches(selector) && (0, $645f2e67b85a24c9$export$e989c0fffaa6b27a)(node) && (!scope || $9bf71ea28793e738$var$isElementInScope(node, scope)) && (!(opts === null || opts === void 0 ? void 0 : opts.accept) || opts.accept(node))) return NodeFilter.FILTER_ACCEPT;\n      return NodeFilter.FILTER_SKIP;\n    }\n  });\n  if (opts === null || opts === void 0 ? void 0 : opts.from) walker.currentNode = opts.from;\n  return walker;\n}\nfunction $9bf71ea28793e738$export$c5251b9e124bf29(ref) {\n  var defaultOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return {\n    focusNext: function focusNext() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var root = ref.current;\n      if (!root) return;\n      var from = opts.from,\n        _opts$tabbable = opts.tabbable,\n        tabbable = _opts$tabbable === void 0 ? defaultOptions.tabbable : _opts$tabbable,\n        _opts$wrap = opts.wrap,\n        wrap = _opts$wrap === void 0 ? defaultOptions.wrap : _opts$wrap,\n        _opts$accept = opts.accept,\n        accept = _opts$accept === void 0 ? defaultOptions.accept : _opts$accept;\n      var node = from || document.activeElement;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      if (root.contains(node)) walker.currentNode = node;\n      var nextNode = walker.nextNode();\n      if (!nextNode && wrap) {\n        walker.currentNode = root;\n        nextNode = walker.nextNode();\n      }\n      if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusPrevious: function focusPrevious() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n      var root = ref.current;\n      if (!root) return;\n      var from = opts.from,\n        _opts$tabbable2 = opts.tabbable,\n        tabbable = _opts$tabbable2 === void 0 ? defaultOptions.tabbable : _opts$tabbable2,\n        _opts$wrap2 = opts.wrap,\n        wrap = _opts$wrap2 === void 0 ? defaultOptions.wrap : _opts$wrap2,\n        _opts$accept2 = opts.accept,\n        accept = _opts$accept2 === void 0 ? defaultOptions.accept : _opts$accept2;\n      var node = from || document.activeElement;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      if (root.contains(node)) walker.currentNode = node;else {\n        var next = $9bf71ea28793e738$var$last(walker);\n        if (next) $9bf71ea28793e738$var$focusElement(next, true);\n        return next;\n      }\n      var previousNode = walker.previousNode();\n      if (!previousNode && wrap) {\n        walker.currentNode = root;\n        previousNode = $9bf71ea28793e738$var$last(walker);\n      }\n      if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);\n      return previousNode;\n    },\n    focusFirst: function focusFirst() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n      var root = ref.current;\n      if (!root) return;\n      var _opts$tabbable3 = opts.tabbable,\n        tabbable = _opts$tabbable3 === void 0 ? defaultOptions.tabbable : _opts$tabbable3,\n        _opts$accept3 = opts.accept,\n        accept = _opts$accept3 === void 0 ? defaultOptions.accept : _opts$accept3;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      var nextNode = walker.nextNode();\n      if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusLast: function focusLast() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n      var root = ref.current;\n      if (!root) return;\n      var _opts$tabbable4 = opts.tabbable,\n        tabbable = _opts$tabbable4 === void 0 ? defaultOptions.tabbable : _opts$tabbable4,\n        _opts$accept4 = opts.accept,\n        accept = _opts$accept4 === void 0 ? defaultOptions.accept : _opts$accept4;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      var next = $9bf71ea28793e738$var$last(walker);\n      if (next) $9bf71ea28793e738$var$focusElement(next, true);\n      return next;\n    }\n  };\n}\nfunction $9bf71ea28793e738$var$last(walker) {\n  var next;\n  var last;\n  do {\n    last = walker.lastChild();\n    if (last) next = last;\n  } while (last);\n  return next;\n}\nvar $9bf71ea28793e738$var$Tree = /*#__PURE__*/function () {\n  _createClass($9bf71ea28793e738$var$Tree, [{\n    key: \"getTreeNode\",\n    value: function getTreeNode(data) {\n      return this.fastMap.get(data);\n    }\n  }, {\n    key: \"addTreeNode\",\n    value: function addTreeNode(scopeRef, parent, nodeToRestore) {\n      var parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);\n      var node = new $9bf71ea28793e738$var$TreeNode({\n        scopeRef: scopeRef\n      });\n      parentNode.addChild(node);\n      node.parent = parentNode;\n      this.fastMap.set(scopeRef, node);\n      if (nodeToRestore) node.nodeToRestore = nodeToRestore;\n    }\n  }, {\n    key: \"addNode\",\n    value: function addNode(node) {\n      this.fastMap.set(node.scopeRef, node);\n    }\n  }, {\n    key: \"removeTreeNode\",\n    value: function removeTreeNode(scopeRef) {\n      // never remove the root\n      if (scopeRef === null) return;\n      var node = this.fastMap.get(scopeRef);\n      var parentNode = node.parent;\n      // when we remove a scope, check if any sibling scopes are trying to restore focus to something inside the scope we're removing\n      // if we are, then replace the siblings restore with the restore from the scope we're removing\n      var _iterator3 = _createForOfIteratorHelper(this.traverse()),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var current = _step3.value;\n          if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef.current && $9bf71ea28793e738$var$isElementInScope(current.nodeToRestore, node.scopeRef.current)) current.nodeToRestore = node.nodeToRestore;\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      var children = node.children;\n      parentNode.removeChild(node);\n      if (children.size > 0) children.forEach(function (child) {\n        return parentNode.addChild(child);\n      });\n      this.fastMap.delete(node.scopeRef);\n    } // Pre Order Depth First\n  }, {\n    key: \"traverse\",\n    value: function traverse() {\n      var _this = this;\n      var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.root;\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _iterator4, _step4, child;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(node.scopeRef != null)) {\n                _context.next = 3;\n                break;\n              }\n              _context.next = 3;\n              return node;\n            case 3:\n              if (!(node.children.size > 0)) {\n                _context.next = 20;\n                break;\n              }\n              _iterator4 = _createForOfIteratorHelper(node.children);\n              _context.prev = 5;\n              _iterator4.s();\n            case 7:\n              if ((_step4 = _iterator4.n()).done) {\n                _context.next = 12;\n                break;\n              }\n              child = _step4.value;\n              return _context.delegateYield(_this.traverse(child), \"t0\", 10);\n            case 10:\n              _context.next = 7;\n              break;\n            case 12:\n              _context.next = 17;\n              break;\n            case 14:\n              _context.prev = 14;\n              _context.t1 = _context[\"catch\"](5);\n              _iterator4.e(_context.t1);\n            case 17:\n              _context.prev = 17;\n              _iterator4.f();\n              return _context.finish(17);\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[5, 14, 17, 20]]);\n      })();\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var newTree = new $9bf71ea28793e738$var$Tree();\n      var _iterator5 = _createForOfIteratorHelper(this.traverse()),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var node = _step5.value;\n          newTree.addTreeNode(node.scopeRef, node.parent.scopeRef, node.nodeToRestore);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      return newTree;\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.fastMap.size;\n    }\n  }]);\n  function $9bf71ea28793e738$var$Tree() {\n    _classCallCheck(this, $9bf71ea28793e738$var$Tree);\n    (0, $6nfFC$swchelperssrc_define_propertymjs)(this, \"fastMap\", new Map());\n    this.root = new $9bf71ea28793e738$var$TreeNode({\n      scopeRef: null\n    });\n    this.fastMap.set(null, this.root);\n  }\n  return $9bf71ea28793e738$var$Tree;\n}();\nvar $9bf71ea28793e738$var$TreeNode = /*#__PURE__*/function () {\n  _createClass($9bf71ea28793e738$var$TreeNode, [{\n    key: \"addChild\",\n    value: function addChild(node) {\n      this.children.add(node);\n      node.parent = this;\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(node) {\n      this.children.delete(node);\n      node.parent = undefined;\n    }\n  }]);\n  function $9bf71ea28793e738$var$TreeNode(props) {\n    _classCallCheck(this, $9bf71ea28793e738$var$TreeNode);\n    (0, $6nfFC$swchelperssrc_define_propertymjs)(this, \"children\", new Set());\n    (0, $6nfFC$swchelperssrc_define_propertymjs)(this, \"contain\", false);\n    this.scopeRef = props.scopeRef;\n  }\n  return $9bf71ea28793e738$var$TreeNode;\n}();\nvar $9bf71ea28793e738$export$d06fae2ee68b101e = new $9bf71ea28793e738$var$Tree();\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $f7dceffc5ad7768b$export$4e328f61c538687f() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _props$autoFocus = props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n    isTextInput = props.isTextInput,\n    within = props.within;\n  var state = (0, $6nfFC$useRef)({\n    isFocused: false,\n    isFocusVisible: autoFocus || (0, $6nfFC$isFocusVisible)()\n  });\n  var _ref2 = (0, $6nfFC$useState)(false),\n    _ref3 = _slicedToArray(_ref2, 2),\n    isFocused = _ref3[0],\n    setFocused = _ref3[1];\n  var _ref4 = (0, $6nfFC$useState)(function () {\n      return state.current.isFocused && state.current.isFocusVisible;\n    }),\n    _ref5 = _slicedToArray(_ref4, 2),\n    isFocusVisibleState = _ref5[0],\n    setFocusVisible = _ref5[1];\n  var updateState = (0, $6nfFC$useCallback)(function () {\n    return setFocusVisible(state.current.isFocused && state.current.isFocusVisible);\n  }, []);\n  var onFocusChange = (0, $6nfFC$useCallback)(function (isFocused) {\n    state.current.isFocused = isFocused;\n    setFocused(isFocused);\n    updateState();\n  }, [updateState]);\n  (0, $6nfFC$useFocusVisibleListener)(function (isFocusVisible) {\n    state.current.isFocusVisible = isFocusVisible;\n    updateState();\n  }, [], {\n    isTextInput: isTextInput\n  });\n  var _ref6 = (0, $6nfFC$useFocus)({\n      isDisabled: within,\n      onFocusChange: onFocusChange\n    }),\n    focusProps = _ref6.focusProps;\n  var _ref7 = (0, $6nfFC$useFocusWithin)({\n      isDisabled: !within,\n      onFocusWithinChange: onFocusChange\n    }),\n    focusWithinProps = _ref7.focusWithinProps;\n  return {\n    isFocused: isFocused,\n    isFocusVisible: state.current.isFocused && isFocusVisibleState,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\nfunction $907718708eab68af$export$1a38b4ad7f578e1d(props) {\n  var _ref9;\n  var children = props.children,\n    focusClass = props.focusClass,\n    focusRingClass = props.focusRingClass;\n  var _ref8 = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)(props),\n    isFocused = _ref8.isFocused,\n    isFocusVisible = _ref8.isFocusVisible,\n    focusProps = _ref8.focusProps;\n  var child = (0, $6nfFC$react).Children.only(children);\n  return /*#__PURE__*/(0, $6nfFC$react).cloneElement(child, (0, $6nfFC$mergeProps)(child.props, _objectSpread({}, focusProps, {\n    className: (0, $6nfFC$clsx)((_ref9 = {}, _defineProperty(_ref9, focusClass || \"\", isFocused), _defineProperty(_ref9, focusRingClass || \"\", isFocusVisible), _ref9))\n  })));\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nvar $e6afbd83fe6ebbd2$var$FocusableContext = /*#__PURE__*/(0, $6nfFC$react).createContext(null);\nfunction $e6afbd83fe6ebbd2$var$useFocusableContext(ref) {\n  var context = (0, $6nfFC$useContext)($e6afbd83fe6ebbd2$var$FocusableContext) || {};\n  (0, $6nfFC$useSyncRef)(context, ref);\n  // eslint-disable-next-line\n  var _ = context.ref,\n    otherProps = _objectWithoutProperties(context, [\"ref\"]);\n  return otherProps;\n}\n/**\n * Provides DOM props to the nearest focusable child.\n */\nfunction $e6afbd83fe6ebbd2$var$FocusableProvider(props, ref) {\n  var children = props.children,\n    otherProps = _objectWithoutProperties(props, [\"children\"]);\n  var context = _objectSpread({}, otherProps, {\n    ref: ref\n  });\n  return /*#__PURE__*/(0, $6nfFC$react).createElement($e6afbd83fe6ebbd2$var$FocusableContext.Provider, {\n    value: context\n  }, children);\n}\nvar $e6afbd83fe6ebbd2$export$13f3202a3e5ddd5 = /*#__PURE__*/(0, $6nfFC$react).forwardRef($e6afbd83fe6ebbd2$var$FocusableProvider);\nfunction $e6afbd83fe6ebbd2$export$4c014de7c8940b4c(props, domRef) {\n  var _ref10 = (0, $6nfFC$useFocus)(props),\n    focusProps = _ref10.focusProps;\n  var _ref11 = (0, $6nfFC$useKeyboard)(props),\n    keyboardProps = _ref11.keyboardProps;\n  var interactions = (0, $6nfFC$mergeProps)(focusProps, keyboardProps);\n  var domProps = $e6afbd83fe6ebbd2$var$useFocusableContext(domRef);\n  var interactionProps = props.isDisabled ? {} : domProps;\n  var autoFocusRef = (0, $6nfFC$useRef)(props.autoFocus);\n  (0, $6nfFC$useEffect)(function () {\n    if (autoFocusRef.current && domRef.current) (0, $6a99195332edec8b$export$80f3e147d781571c)(domRef.current);\n    autoFocusRef.current = false;\n  }, [domRef]);\n  return {\n    focusableProps: (0, $6nfFC$mergeProps)(_objectSpread({}, interactions, {\n      tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n    }), interactionProps)\n  };\n}\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $83013635b024ae3d$export$eac1895992b9f3d6(ref, options) {\n  var isDisabled = options === null || options === void 0 ? void 0 : options.isDisabled;\n  var _ref12 = (0, $6nfFC$useState)(false),\n    _ref13 = _slicedToArray(_ref12, 2),\n    hasTabbableChild = _ref13[0],\n    setHasTabbableChild = _ref13[1];\n  (0, $6nfFC$useLayoutEffect)(function () {\n    if ((ref === null || ref === void 0 ? void 0 : ref.current) && !isDisabled) {\n      var update = function update() {\n        if (ref.current) {\n          var walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(ref.current, {\n            tabbable: true\n          });\n          setHasTabbableChild(!!walker.nextNode());\n        }\n      };\n      update();\n      // Update when new elements are inserted, or the tabIndex/disabled attribute updates.\n      var observer = new MutationObserver(update);\n      observer.observe(ref.current, {\n        subtree: true,\n        childList: true,\n        attributes: true,\n        attributeFilter: [\"tabIndex\", \"disabled\"]\n      });\n      return function () {\n        // Disconnect mutation observer when a React update occurs on the top-level component\n        // so we update synchronously after re-rendering. Otherwise React will emit act warnings\n        // in tests since mutation observers fire asynchronously. The mutation observer is necessary\n        // so we also update if a child component re-renders and adds/removes something tabbable.\n        observer.disconnect();\n      };\n    }\n  });\n  return isDisabled ? false : hasTabbableChild;\n}\nexport { $9bf71ea28793e738$export$20e40289641fbbb6 as FocusScope, $9bf71ea28793e738$export$10c5169755ce7bd7 as useFocusManager, $9bf71ea28793e738$export$2d6ec8fc375ceafa as getFocusableTreeWalker, $9bf71ea28793e738$export$c5251b9e124bf29 as createFocusManager, $9bf71ea28793e738$export$1258395f99bf9cbf as isElementInChildOfActiveScope, $907718708eab68af$export$1a38b4ad7f578e1d as FocusRing, $e6afbd83fe6ebbd2$export$13f3202a3e5ddd5 as FocusableProvider, $e6afbd83fe6ebbd2$export$4c014de7c8940b4c as useFocusable, $f7dceffc5ad7768b$export$4e328f61c538687f as useFocusRing, $6a99195332edec8b$export$80f3e147d781571c as focusSafely, $83013635b024ae3d$export$eac1895992b9f3d6 as useHasTabbableChild };","map":null,"metadata":{},"sourceType":"module"}